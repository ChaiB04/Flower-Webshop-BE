plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'

    id "org.sonarqube" version "6.2.0.5505"
    id 'jacoco'
}

group = 'flowerwebshop'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'



    implementation 'org.postgresql:postgresql:42.7.3'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

tasks.named('sonar').configure {
    dependsOn jacocoTestReport
}

sonar {
    properties {
        property "sonar.projectKey", "cbpersonal_flowershop-be"
        property "sonar.organization", "cbpersonal"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.sources", "src/main/java/flowerwebshop/liora/service"
        property "sonar.tests", "src/test/java"
        property "sonar.token", System.getenv('SONAR_TOKEN')

    }
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "*/configuration/"
            ])
        }))
    }
}
